What is the difference between push, pull, and fetch?

git push - sent changes from a local branch to a remote repo
git fetch - get changes from a remote repo into your tracking branch
git pull - will get changes from a remote branch into your tracking branch and merge them into a local branch

You may find that git push and git pull have similar definitions. But it's important to understand that the tasks they perform are actually different.

The purpose of git push is to send changes from a local branch to a remote repository, or repo. Git takes your current branch and checks to see if it is connected to a tracking branch for a remote repository. If so, Git shares code with the remote repository by taking your changes from your branch and pushing them to the remote branch. You can think of git push as asking Git to "make the remote branch resemble my local branch."

If the git pull succeeded, you need to synchronize the local branch with the remote branch by using a combination of git pull or git fetch and git merge.

Using git fetch again takes our current branch and checks to see if there is a tracking branch. If so, it looks for changes in the remote branch and pulls them into the tracking branch. It does not change your local branch.

To do that, you'll need to do git merge origin/master (for the "master" branch) to merge those changes into your branch - probably also called "master". git pull simply does a git fetch followed immediately by git merge. This is often what we desire to do, but some people prefer to use git fetch followed by git merge to make sure they understand the changes they are merging into their branch before the merge happens.
